import { AxiosInstance } from 'axios';
import { Authorization } from '../client';
export interface OauthToken {
    access_token: string;
    expires_in: string;
    refresh_token: string;
    scope: string;
    token_type: string;
}
export interface TradingSession {
    accountId: string;
    clientId: string;
    lightstreamerEndpoint: string;
    oauthToken: OauthToken;
    timezoneOffset: number;
}
export declare class LoginAPI {
    private readonly apiClient;
    private auth;
    static readonly URL: {
        REFRESH_TOKEN: string;
        SESSION: string;
    };
    constructor(apiClient: AxiosInstance, auth: Authorization);
    /**
     * Creates a trading session, obtaining session tokens for subsequent API access.
     *
     * @param username - Username
     * @param password - Password
     * @see https://labs.ig.com/rest-trading-api-reference/service-detail?id=534
     */
    createSession(username: string, password: string): Promise<TradingSession>;
    /**
     * Saves the user's session details.
     *
     * @see https://labs.ig.com/rest-trading-api-reference/service-detail?id=534
     */
    getSessionToken(): Promise<boolean>;
    /**
     * Returns the user's session details.
     *
     * @see https://labs.ig.com/rest-trading-api-reference/service-detail?id=534
     */
    getSession(): Promise<TradingSession>;
    /**
     * Refreshes a trading session, obtaining new session tokens for subsequent API access.
     *
     * @see https://labs.ig.com/rest-trading-api-reference/service-detail?id=523
     */
    refreshToken(): Promise<OauthToken>;
}
